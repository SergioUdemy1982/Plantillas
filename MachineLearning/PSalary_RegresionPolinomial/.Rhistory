library(fastDummies)
# Plantilla de preprocesado de datos
#
#
# Importar librerias
library(tidyverse)
library(caTools)
library(fastDummies)
library(readr)
#
#
# Importar datos
dataset <- read_csv(file = "Datasets/Position_Salaries.csv")
View(dataset)
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x,2,raw=T), se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x,3,raw=T), se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = exp(y) ~ x, se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = ln(y) ~ x, se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = log(y) ~ x, se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = log(Salary) ~ Level, se=F)+
labs(title = "Position Salary", x = "Level", y = "Salary")
# Analisis exploratorio
#
#
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
labs(title = "Position Salary", x = "Level", y = "Salary")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x,4,raw=T), se=F) +
labs(title = "Position Salary", x = "Level", y = "Salary")
x <- function(x){return(x^4)}
rm(x)
y <- function(x){return(x^4)}
y(4)
x <- c(1:10)
x
y(x)
plot(x,y(x))
y2 <- function(x){return(x^2)}
plot(x, y2(x))
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,4,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,6,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,8,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,4,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,5,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
ggplot(data = dataset, mapping = aes(x = Level, y = Salary)) +
geom_point() +
stat_smooth(method = "lm",
formula = y ~ poly(x,6,raw=T),
se=F,
colour = "steelblue") +
stat_smooth(method = "lm",
formula = y ~ poly(x,2,raw=T),
se=F,
colour="orange")
# Removemos la columna "Position"
dataset %>% select(-Position)
# Removemos la columna "Position"
dataset <- dataset %>% select(-Position)
# Modelo
#
#
# Regresion lineal simple
regresion1 <- lm(formula = y ~ x,
data = dataset,
x = Level,
y = Salary)
# Modelo
#
#
# Regresion lineal simple
regresion1 <- lm(formula = Salary ~ Level, data = dataset)
summary(regresion1)
anova(regresion1)
confint(regresion1)
regresion1$coefficients
# Regresion lineal polinomica grado 2
regresion2 <- lm(formula = Salary ~ poly(Level, 2, raw = T), data = dataset)
summary(regresion2)
regresion2$coefficients
anova(regresion2)
regresion4 <- lm(formula = Salary ~ poly(Level, 4 raw = T), data = dataset)
regresion4 <- lm(formula = Salary ~ poly(Level, 4, raw = T), data = dataset)
summary(regresion4)
anova(regresion4)
regresion4
regresion4$coefficients
summary(regresion4)
plot(regresion1)
plot(regresion2)
plot(regresion4)
# Regresion polinomica grado 6
regresion6 <- lm(formula = Salary ~ poly(Level, 6, raw = T), data = dataset)
summary(regresion6)
anova(regresion6)
plot(regresion6)
shapiro.test(x = regresion6$residuals)
regresion6$model
# Regresion polinomica grado 3
regresion3 <- lm(formula = Salary ~ poly(Level, 3, raw = T), data = dataset)
summary(regresion3)
anova(regresion3)
plot(regresion3)
summary(regresion4)
summary(regresion6)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary))
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)))
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)), colour = "red")
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)), colour = "red") +
geom_line(aes(dataset$Level, predict(regresion2, dataset)), color = "blue")
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)), colour = "red") +
geom_line(aes(dataset$Level, predict(regresion2, dataset)), color = "blue") +
geom_line(aes(dataset$Level, predict(regresion3, dataset)), colour = "green")
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)), colour = "red") +
geom_line(aes(dataset$Level, predict(regresion2, dataset)), color = "blue") +
geom_line(aes(dataset$Level, predict(regresion3, dataset)), colour = "green") +
geom_line(aes(dataset$Level, predict(regresion4, dataset)), colour = "pink")
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion1,dataset)), colour = "red") +
geom_line(aes(dataset$Level, predict(regresion2, dataset)), color = "blue") +
geom_line(aes(dataset$Level, predict(regresion3, dataset)), colour = "green") +
geom_line(aes(dataset$Level, predict(regresion4, dataset)), colour = "pink") +
geom_line(aes(dataset$Level, predict(regresion6, dataset)), colour = "orange")
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion6, dataset)), colour = "orange", size = 2)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion6, dataset)), colour = "orange", size = 1)
preds_6 <- tibble(Level = dataset$Level,
Salary = dataset$Salary,
Salary_pred = regresion6$fitted.values)
View(preds_6)
regresion6$model
colnames(regresion6$model)
regresion6$model[2]
regresion6$model[3]
summary(regresion4)
summary(regresion6)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion4, dataset)),
colour = "orange",
size = 1)
preds_4 <- tibble(Level = dataset$Level,
Salary = dataset$Salary,
Salary_pred = regresion4$fitted.values)
View(preds_4)
# Regresion Polinomica grado 5
regresion5 <- lm(formula = Salary ~ poly(Level, 5, raw=T), data = dataset)
summary(regresion5)
anova(regresion5)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion5, dataset)),
colour = "orange",
size = 1)
preds_5 <- tibble(Level = dataset$Level,
Salary = dataset$Salary,
Salary_pred = regresion5$fitted.values)
View(preds_5)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion5, dataset)),
colour = "orange",
size = 1) +
stat_smooth(mapping = aes(dataset$Level, predict(regresion5, dataset)),
method = "lm",
formula = y ~ poly(x, 5, raw = T))
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion5, dataset)),
colour = "orange",
size = 1) +
stat_smooth(mapping = aes(dataset$Level, predict(regresion5, dataset)),
method = "lm",
formula = y ~ poly(x, 5, raw = T),
se = T)
summary(regresion4)
summary(regresion5)
summary(regresion2)
summary(regresion3)
summary(regresion4)
# Regresion polinomica grado 8
regresion8 <- lm(formula = Salary ~ poly(Level, 8, raw = T), data = dataset)
summary(regresion8)
anova(regresion8)
preds_8 <- tibble(Level = dataset$Level,
Salary = dataset$Salary,
Salary_pred = regresion8$fitted.values)
View(preds_8)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion8, dataset)),
colour = "orange",
size = 1) +
stat_smooth(mapping = aes(dataset$Level, predict(regresion5, dataset)),
method = "lm",
formula = y ~ poly(x, 5, raw = T),
se = T)
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion8, dataset)),
colour = "orange",
size = 1) +
stat_smooth(mapping = aes(dataset$Level, predict(regresion5, dataset)),
method = "lm",
formula = y ~ poly(x, 8, raw = T),
se = T)
predict(regresion4, dataset)
regresion4$fitted.values
summary(regresion5)
summary(regresion4)
0.01 < 0.05
ggplot() +
geom_point(aes(dataset$Level, dataset$Salary)) +
geom_line(aes(dataset$Level, predict(regresion4, dataset)),
colour = "orange",
size = 1) +
stat_smooth(mapping = aes(dataset$Level, predict(regresion4, dataset)),
method = "lm",
formula = y ~ poly(x, 4, raw = T),
se = T)
preds_4 <- tibble(Level = dataset$Level,
Salary = dataset$Salary,
Salary_pred = regresion4$fitted.values)
View(preds_4)
summary(regresion6)
